[{"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/index.js":"1","/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/App.js":"2","/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/reportWebVitals.js":"3","/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/SignIn.jsx":"4","/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/SignUp.jsx":"5","/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/SignInCheck.jsx":"6","/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/NextSignUp.jsx":"7"},{"size":535,"mtime":1679645116000,"results":"8","hashOfConfig":"9"},{"size":612,"mtime":1680495991943,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1679645116000,"results":"11","hashOfConfig":"9"},{"size":2393,"mtime":1681008130739,"results":"12","hashOfConfig":"9"},{"size":3941,"mtime":1680951188726,"results":"13","hashOfConfig":"9"},{"size":0,"mtime":1680066762189,"results":"14","hashOfConfig":"9"},{"size":3388,"mtime":1681008066133,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yywv8y",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/index.js",[],[],"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/App.js",[],[],"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/reportWebVitals.js",[],[],"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/SignIn.jsx",["39","40","41"],[],"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/SignUp.jsx",["42","43"],[],"import { createBrowserHistory } from \"@remix-run/router\";\nimport loading from \"../assets/loading.png\";\nimport { useState, useEffect } from \"react\";\nimport { Link as OriginalLink } from \"react-router-dom\";\nimport \"../SignUp.css\";\n\nexport default function SignUp() {\n  //ID, EMAIL, PW, CONFRIM Check\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n\n  //유효성검사\n  const [isName, setIsName] = useState(false);\n  const [emailValid, setEmailValid] = useState(false);\n  const [pwValid, setPwValid] = useState(false);\n  const [isPasswordConfirm, setIsPasswordConfirm] = useState(false);\n\n  const handleName = (e) => {\n    setName(e.target.value);\n    const regex =\n      /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    if (regex.test(name)) {\n      setIsName(true);\n    } else {\n      setIsName(false);\n    }\n  };\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n    const regex =\n      /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    if (regex.test(email)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  };\n\n  const handlePassWord = (e) => {\n    setPw(e.target.value);\n    const regex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    if (regex.test(pw)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n  };\n\n  useEffect(() => {\n    if (pw === passwordConfirm) {\n      setIsPasswordConfirm(true);\n    } else {\n      setIsPasswordConfirm(false);\n    }\n  }, [pw, passwordConfirm]);\n\n  return (\n    <div className=\"enterInfo\">\n      <div className=\"signUpImage\">\n        <img src={loading} />\n      </div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputWrap\">\n          <div className=\"idinput\">ID</div>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => handleEmail(e)}\n          />\n        </div>\n\n        <div className=\"errorMessageWrap\">\n          {!emailValid && email.length > 0 && (\n            <div>올바른 이메일을 입력해주세요.</div>\n          )}\n        </div>\n\n        <div className=\"inputWrap\">\n          <div className=\"PWinput\">PW</div>\n          <input\n            className=\"input\"\n            type=\"password\"\n            value={pw}\n            onChange={(e) => handlePassWord(e)}\n          />\n        </div>\n\n        <div className=\"errorMessageWrap\">\n          {!pwValid && pw.length > 0 && (\n            <div> 영문, 숫자, 특수문자 포함 8자 이상 입력해주세요.</div>\n          )}\n        </div>\n\n        <div className=\"inputWrap\">\n          <div className=\"PWinput\"> CONFIRM </div>\n          <input\n            onChange={(e) => setPasswordConfirm(e.target.value)}\n            value={passwordConfirm}\n            type=\"password\"\n            className=\"input\"\n          />\n        </div>\n\n        <div className=\"errorMessageWrap\">\n          {!isPasswordConfirm && <div> 일치하지 않습니다. </div>}\n        </div>\n\n        <div className=\"inputWrap\">\n          <div className=\"idinput\"> Email </div>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => handleName(e)}\n          />\n        </div>\n\n        <div className=\"errorMessageWrap\">\n          {!isName && name.length > 0 && (\n            <div>올바른 이메일을 입력해주세요.</div>\n          )}\n        </div>\n\n        <div>\n          <OriginalLink to=\"/signin\">\n            <button className=\"bottomButton3\"> BACK </button>\n          </OriginalLink>\n          <OriginalLink to=\"/nextsignup\">\n            <button className=\"bottomButton4\"> NEXT </button>\n          </OriginalLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n",[],"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/SignInCheck.jsx",[],[],"/Users/cowlg/Documents/GitHub/We_save_Together_Host/src/pages/NextSignUp.jsx",["44","45","46","47","48","49","50"],[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":38,"column":9,"nodeType":"57","endLine":38,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":41,"column":9,"nodeType":"57","endLine":41,"endColumn":30},{"ruleId":"51","severity":1,"message":"58","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":30},{"ruleId":"55","severity":1,"message":"56","line":63,"column":9,"nodeType":"57","endLine":63,"endColumn":30},{"ruleId":"51","severity":1,"message":"59","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":24},{"ruleId":"51","severity":1,"message":"60","line":2,"column":20,"nodeType":"53","messageId":"54","endLine":2,"endColumn":29},{"ruleId":"51","severity":1,"message":"61","line":13,"column":10,"nodeType":"53","messageId":"54","endLine":13,"endColumn":20},{"ruleId":"51","severity":1,"message":"62","line":14,"column":10,"nodeType":"53","messageId":"54","endLine":14,"endColumn":20},{"ruleId":"51","severity":1,"message":"63","line":15,"column":10,"nodeType":"53","messageId":"54","endLine":15,"endColumn":22},{"ruleId":"51","severity":1,"message":"64","line":16,"column":10,"nodeType":"53","messageId":"54","endLine":16,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":69,"column":9,"nodeType":"57","endLine":69,"endColumn":30},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createBrowserHistory' is defined but never used.","'BrowserHistory' is defined but never used.","'useEffect' is defined but never used.","'rnameValid' is assigned a value but never used.","'phoneValid' is assigned a value but never used.","'confirmValid' is assigned a value but never used.","'addressValid' is assigned a value but never used."]